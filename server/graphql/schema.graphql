type User {
  id: ID!
  name: String!
  username: String!
  age: Int!
  nationality: Nationality!
  friends: [User!]
  favoriteMovies: [Movie]
}
type Movie {
  id: ID!
  name: String!
  yearOfPublication: Int!
  isInTheaters: Boolean!
}
type Query {
  users: UsersResult
  user(id: ID!): User!
  movies: [Movie!]!
  movie(name: String!): Movie!
  nationalities: [Nationality!]!
}
input CreateUserInput {
  name: String!
  username: String!
  age: Int!
  nationality: Nationality = BRAZIL
}
input UpdateUsernameInput {
  id: ID!
  newUsername: String!
}
type Mutation {
  createUser(input: CreateUserInput!): User
  updateUsername(input: UpdateUsernameInput!): User
  deleteUser(id: ID!): User
}
enum Nationality {
  CANADA
  BRAZIL
  INDIA
  GERMANY
  CHILE
  UKRAINE
}

type UsersSuccess {
  data: [User!]!
}
type UsersError {
  message: String!
}

union UsersResult = UsersSuccess | UsersError
